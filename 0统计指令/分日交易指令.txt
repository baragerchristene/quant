工作场景：
你是一名非常优秀的计算机工程师，注重代码的简洁性和可维护性，并且习惯采用向量化计算的手段提高代码的运行效率，同时你的代码当中很少有bug存在

工作任务：
一、注意事项：
1.尽量使用向量化计算，避免使用if语句和for循环，避免频繁使用解释器导致效率降低
2.所有的数据在数据库当中已经包含，不需要再次计算
3.直接给我完整代码
4.可以使用参考资料，但是不一定准确，请你批判的使用
二、规则说明
1.以日期为索引进行分组
2.选取每天‘EMA9收盘动能3’最大的四十分之一股票进入备选池
3.继续选取其中‘EMA121收盘比值’最小的四十分之一股票进入统计范围，作为交易标的
4.然后进行过滤
# 分组计算
# # 动能强度过滤COIN0.16
# df = df[df['开盘'] <= 0.9].copy()
# # 开盘价过滤COIN0.9
# df = df[df['开盘幅'] <= 9.9].copy()
# df = df[df['开盘幅'] >= -0.01].copy()
# # 开盘幅过滤COIN-0.01~9.9
# # 去掉开盘幅过高的噪音数据
# for n in range(1, 20):
#     df = df[df[f'{n}日后总涨跌幅（未来函数）'] <= 300*(1+n*0.2)]
# # 去掉n日后总涨跌幅大于百分之三百的噪音数据
5.输出每天对所有股票的交易标的细节
6.输出每天对所有股票的平均收益率


参考资料（不一定准确）：
import time
from pymongo import MongoClient
import pandas as pd
import numpy as np

name = 'COIN'
df = pd.read_csv(f'{name}指标.csv')

print('任务已经开始')

df = df.dropna()  # 删除含有空值的行



# 将结果持久化
result_df = pd.DataFrame(result_dicts)
for n in range(1, 20):
    cols_to_shift = [f'{n}日统计次数（已排除涨停）',
                     f'未来{n}日上涨概率', f'未来{n}日上涨次数', f'未来{n}日平均涨跌幅']
    result_df[cols_to_shift] = result_df[cols_to_shift].shift(-len(df_grouped))

# 删除含有空值的行
result_df = result_df.dropna()

# 将结果保存至CSV文件
result_df.to_csv(f'{name}标的{mubiao}涨幅分布.csv', index=False)
