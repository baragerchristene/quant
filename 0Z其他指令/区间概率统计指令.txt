工作场景：
你是一名非常优秀的计算机工程师，注重代码的简洁性和可维护性，并且习惯采用向量化计算的手段提高代码的运行效率，同时你的代码当中很少有bug存在
此外，你在从数据库获得数据后，习惯性添加一句print（'已经从数据库获取数据'），以方便测试

工作任务：
1.请使用python读取'stock指标'数据库中的数据（数据库中数据的结构参考参考资料中的数据结构部分）
2.筛选当日涨跌幅<9.9时，则标记当天为买入日
3.
分别统计买入日f'{n}日后总涨跌幅（未来函数）'>0的概率、次数，以及买入日f'{n}日后总涨跌幅（未来函数）'的平均值（计算时排除掉当日涨停的数据）,统计数据当中'当日是否涨跌停'=1的次数，
并且分别将计算结果输出到数据库中名为f'四十日交易量排名{n}日涨幅分布'的数据集合当中。
其中n<=6
每个数据表，均为单独的excel表，每个值当中都是单独的数值或者字符串类型的数据，不能是字典或者数组
例如：
40日交易量排名>0且<=5时，总统计次数，f'{n}日后总涨跌幅（未来函数）'>0的概率、次数，以及'涨跌幅'的平均值,统计数据当中已经排除掉'当日是否涨跌停'=1的次数
40日交易量排名>5且<=10时，总统计次数，f'{n}日后总涨跌幅（未来函数）'>0的概率、次数，以及'涨跌幅'的平均值,统计数据当中已经排除掉'当日是否涨跌停'=1的次数
40日交易量排名>10且<=15时，总统计次数，f'{n}日后总涨跌幅（未来函数）'>0的概率、次数，以及'涨跌幅'的平均值,统计数据当中已经排除掉'当日是否涨跌停'=1的次数
40日交易量排名>15且<=20时，总统计次数，f'{n}日后总涨跌幅（未来函数）'>0的概率、次数，以及'涨跌幅'的平均值,统计数据当中已经排除掉'当日是否涨跌停'=1的次数
40日交易量排名>20且<=25时，总统计次数，f'{n}日后总涨跌幅（未来函数）'>0的概率、次数，以及'涨跌幅'的平均值,统计数据当中已经排除掉'当日是否涨跌停'=1的次数
40日交易量排名>25且<=30时，总统计次数，f'{n}日后总涨跌幅（未来函数）'>0的概率、次数，以及'涨跌幅'的平均值,统计数据当中已经排除掉'当日是否涨跌停'=1的次数
40日交易量排名>30且<=35时，总统计次数，f'{n}日后总涨跌幅（未来函数）'>0的概率、次数，以及'涨跌幅'的平均值,统计数据当中已经排除掉'当日是否涨跌停'=1的次数
40日交易量排名>35且<=41时，总统计次数，f'{n}日后总涨跌幅（未来函数）'>0的概率、次数，以及'涨跌幅'的平均值,统计数据当中已经排除掉'当日是否涨跌停'=1的次数


4.给我完整代码
参考资料：
from pymongo import MongoClient
import pandas as pd
import numpy as np

# 连接MongoDB数据库
client = MongoClient(
    'mongodb://wth000:wth000@43.159.47.250:27017/dbname?authSource=wth000')
db = client['wth000']
collection = db['stock指标']
cursor = collection.find()

# 构建数据集
df = pd.DataFrame(list(cursor))

print('数据获取成功')

二、数据结构：
// 1
{
    "_id": ObjectId("6422ae0d674c3f074f62ee6f"),
    "日期": "2022-05-24",
    "开盘": 14.64,
    "收盘": 14.17,
    "最高": 14.64,
    "最低": 14.17,
    "成交量": 933557,
    "成交额": 1358693536,
    "振幅": 3.22,
    "涨跌幅": -2.95,
    "涨跌额": -0.43,
    "换手率": 0.48,
    "代码": "000001",
    "标准时间间隔": NumberInt("5443200"),
    "40日交易量排名": 20,
    "是否涨跌停":-1,
    "1日后总涨跌幅（未来函数）": -0.0705716302046522,
    "2日后总涨跌幅（未来函数）": -1.48200423429781,
    "3日后总涨跌幅（未来函数）": -1.55257586450247,
    "4日后总涨跌幅（未来函数）": -2.25829216654905,
    "5日后总涨跌幅（未来函数）": -1.69371912491179,
    "6日后总涨跌幅（未来函数）": -2.25829216654905
}