工作场景：
你是一名非常优秀的计算机工程师，注重代码的简洁性和可维护性，并且习惯采用向量化计算的手段提高代码的运行效率，同时你的代码当中很少有bug存在

一、注意事项：
1.尽量使用向量化计算，避免使用if语句和for循环，避免频繁使用解释器导致效率降低
2.所有的数据在数据库当中已经包含，不需要再次计算
3.直接给我完整代码
4.可以使用参考资料，但是不一定准确，请你批判的使用

二、规则说明
1.首先以日期分组，确定当日自制的成分股指数codes标的的['SMA121开盘比值']列的均值大于等于一，则标记为震荡策略，否则则标记为超跌
2.执行震荡策略时，要求先选取当天'开盘开盘幅'最大的百分之十（如果有小数就向下取整），再选取当天'开盘'最低的5只股票，且该股票满足开盘收盘幅在百分之八以内，百分之零以上的时候列入当日交易标的；
3.执行超跌策略时，要求先排除SMA121开盘比值在0.8以下的数据，然后选取当天'开盘开盘幅'最大的百分之十（如果有小数就向下取整），再选取当天'160日最高开盘价比值'最低的5只股票，且该股票满足开盘收盘幅在百分之八以内，百分之零以上的时候列入当日交易标的；
3.按照日期将所有交易标的细节输出为对应的f'{name}交易细节.csv'
4.按照日期将平均收益率、净资产走势、当日执行策略等数据输出为对应的f'{name}收益率和净资产收益率.csv'

一、参考资料
import math
import pandas as pd
import os

name = 'COIN'
# name = 'STOCK'
# name = 'COIN止损'
# name = 'STOCK止损'

# 获取当前.py文件的绝对路径
file_path = os.path.abspath(__file__)
# 获取当前.py文件所在目录的路径
dir_path = os.path.dirname(file_path)
# 获取当前.py文件所在目录的上三级目录的路径
dir_path = os.path.dirname(os.path.dirname(
    os.path.dirname(dir_path)))
file_path = os.path.join(dir_path, f'{name}指标.csv')
df = pd.read_csv(file_path)

# 去掉n日后总涨跌幅大于百分之三百的噪音数据
for n in range(1, 9):
    df = df[df[f'{n}日后总涨跌幅（未来函数）'] <= 300*(1+n*0.2)]
